openapi: 3.0.0
info:
  title: Jobs Api
  contact:
    name: Ubed Shaikh
    url: https://ubedshaikh.netlify.app/home#contact
    email: shaikhobaid123@gmail.com
  version: '1.0'
servers:
- url: https://jobs-api-kizb.onrender.com/api/v1
  variables: {}
paths:
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginRequest'
              - example:
                  email: test@test.com
                  password: Test@123
            example:
              email: test@test.com
              password: Test@123
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterRequest'
              - example:
                  name: John Doe
                  email: test@test.com
                  password: Test@123
            example:
              name: John Doe
              email: test@test.com
              password: Test@123
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create
      operationId: Create
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateRequest'
              - example:
                  company: Netflix
                  position: Frontend Developer
            example:
              company: Netflix
              position: Frontend Developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
      - Jobs
      summary: Read All
      operationId: ReadAll
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The Job ID
    get:
      tags:
      - Jobs
      summary: Read One
      operationId: ReadOne
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    patch:
      tags:
      - Jobs
      summary: Update
      operationId: Update
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateRequest'
              - example:
                  company: Microsoft
                  position: Laravel Developer
                  status: interview
            example:
              company: Microsoft
              position: Laravel Developer
              status: interview
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - Jobs
      summary: Delete
      operationId: Delete
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    LoginRequest:
      title: LoginRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: test@test.com
        password: Test@123
    RegisterRequest:
      title: RegisterRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: John Doe
        email: test@test.com
        password: Test@123
    CreateRequest:
      title: CreateRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Netflix
        position: Frontend Developer
    UpdateRequest:
      title: UpdateRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: Microsoft
        position: Laravel Developer
        status: interview
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security:
- bearer: []
tags:
- name: Auth
- name: Jobs